trigger:
- master

pool:
  vmImage: 'windows-2019'
  
parameters:
- name: 'publishEnabled'
  default: 'false'
  type: string
- name: 'publishContainer'
  default: ''
  type: string

variables:
  - group: Versions
  - name: 'nugetConfigPath'
    value: '$(Build.SourcesDirectory)/Source/WaveEngine.MRTK/NuGet.config'
  - name: 'nugetOutputPath'
    value: '$(Build.StagingDirectory)/nupkgs'
  - name: 'wepkgOutputPath'
    value: '$(Build.StagingDirectory)/wepkgs'
  - name: 'appversion'
    value: '$(version.major).$(version.minor).$(version.patch).$(Build.BuildID)-$(version.previewSuffix)'

workspace:
  clean: all

steps:

- task: UseDotNet@2
  displayName: 'Check .NETCore SDK'
  inputs:
    version: '$(NetCoreSDKVersion)'

- task: NuGetToolInstaller@1
  displayName: 'Check NuGet client'
  inputs:
    versionSpec: '$(NuGetVersion)'
    checkLatest: true

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: '"<configuration></configuration>" > $(nugetConfigPath)'

- task: NuGetCommand@2
  inputs:
    command: 'custom'
    arguments: 'sources add -Name "nuget.org" -Source "https://api.nuget.org/v3/index.json" -ConfigFile $(nugetConfigPath)'

- task: PowerShell@2
  displayName: 'Generate NuGet packages'
  inputs:
    filePath: './Generate-NuGets.ps1'
    arguments: '-Version $(appversion) -outputfolder $(nugetOutputPath)'
    
- task: PowerShell@2
  displayName: 'Generate Assets package'
  inputs:
    filePath: './Generate-Assets-Package.ps1'
    arguments: '-Version $(appversion) -outputfolder $(wepkgOutputPath)'

- task: PublishBuildArtifacts@1
  displayName: "Publish Artifact: NuGets"
  inputs:
    PathtoPublish: '$(nugetOutputPath)'
    ArtifactName: 'NuGets'
    publishLocation: 'Container'

#- task: NuGetCommand@2
#  displayName: 'Push NuGets to NuGet.org'
#  enabled: ${{ parameters.publishEnabled }}
#  inputs:
#    command: 'push'
#    packagesToPush: '$(nugetOutputPath)/**/*.nupkg;!$(nugetOutputPath)/**/*.symbols.nupkg'
#    nuGetFeedType: 'external'
#    publishFeedCredentials: 'WaveEngine Nuget.org'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: Wepkgs'
  inputs:
    PathtoPublish: '$(wepkgOutputPath)/$(appversion)'
    ArtifactName: Wepkgs
  continueOnError: true

- task: AzureFileCopy@2
  displayName: 'Upload to Azure BLOB Wepkgs'
  enabled: ${{ parameters.publishEnabled }}
  condition: and(succeeded(), ne('${{ parameters.publishContainer }}', ''))
  inputs:
    SourcePath: '$(wepkgOutputPath)/$(appversion)/WaveEngine.MRTK.Assets.$(appversion).wepkg'
    azureSubscription: 'Waveengineteam devops connections SP'
    Destination: AzureBlob
    storage: waveeditor
    ContainerName: 'wepkg-${{ parameters.publishContainer }}'