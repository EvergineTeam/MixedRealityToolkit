parameters:
  - name: "buildVersion"
    default: ""
    type: string
  - name: "publishEnabled"
    default: "false"
    type: string
  - name: "publishFeed"
    default: ""
    type: string
  - name: "publishContainer"
    default: ""
    type: string

jobs:
  - job: "BuildAddon"
    displayName: "Build Addon"
    workspace:
      clean: all
    pool:
      vmImage: "windows-2022"
    variables:
      nugetOutputPath: "$(Build.StagingDirectory)/nupkgs"
      wepkgOutputPath: "$(Build.StagingDirectory)/wepkgs"
      NetCoreSDKVersion: "6.x"
      NuGetVersion: "6.x"

    steps:
      - task: UseDotNet@2
        displayName: "Check .NETCore SDK"
        inputs:
          version: "$(NetCoreSDKVersion)"

      - task: NuGetToolInstaller@1
        displayName: "Check NuGet client"
        inputs:
          versionSpec: "$(NuGetVersion)"
          checkLatest: true

      - task: PowerShell@2
        displayName: "Generate NuGet packages"
        inputs:
          filePath: "./Generate-NuGets.ps1"
          arguments: "-Version ${{ parameters.buildVersion }} -outputfolder $(nugetOutputPath)"

      - task: PowerShell@2
        displayName: "Generate Assets package"
        inputs:
          filePath: "./Generate-Assets-Package.ps1"
          arguments: "-Version ${{ parameters.buildVersion }} -outputfolder $(wepkgOutputPath)"

      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact: NuGets"
        inputs:
          PathtoPublish: "$(nugetOutputPath)"
          ArtifactName: "NuGets"

      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact: Wepkgs"
        inputs:
          PathtoPublish: "$(wepkgOutputPath)"
          ArtifactName: Wepkgs

      - task: NuGetCommand@2
        displayName: "Push NuGets to feed"
        enabled: ${{ parameters.publishEnabled }}
        condition: and(succeeded(), ne('${{ parameters.publishFeed }}', ''))
        inputs:
          command: "push"
          packagesToPush: "$(nugetOutputPath)/*.nupkg;!$(nugetOutputPath)/*.symbols.nupkg"
          nuGetFeedType: "external"
          publishFeedCredentials: ${{ parameters.publishFeed }}

      - task: AzureFileCopy@2
        displayName: "Upload to Azure BLOB packages"
        enabled: ${{ parameters.publishEnabled }}
        condition: and(succeeded(), ne('${{ parameters.publishContainer }}', ''))
        inputs:
          SourcePath: "$(wepkgOutputPath)/Evergine.MRTK.${{ parameters.buildVersion }}.wepkg"
          azureSubscription: "Waveengineteam devops connections SP"
          Destination: AzureBlob
          storage: everginestudio
          ContainerName: "pkg-${{ parameters.publishContainer }}"
